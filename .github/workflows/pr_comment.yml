name: Comment on PR
run-name: Comment on PR

on:
  issue_comment:
    types: [created]

permissions:
    pull-requests: write
    deployments: write
    contents: write
    checks: read

jobs:
  comment_on_pr:
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest

    steps:
      - uses: github/branch-deploy@v7.0.0
        id: branch-deploy
        with:
          trigger: .deploy
          environment: beta
          environment_targets: beta,stage,preview,production
          noop_trigger: check
          skip_reviews: beta,stage,preview,production

      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.branch-deploy.outputs.ref }}
          fetch-depth: '0'

      - uses: actions/setup-python@v4
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        run: pip install -r ./scripts/git_test/requirements.txt

      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        if: |
          steps.branch-deploy.outputs.continue == 'true' &&
          steps.branch-deploy.outputs.noop == 'true'
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_SECRET }}

      - name: Comment check
        if: |
          steps.branch-deploy.outputs.continue == 'true' &&
          steps.branch-deploy.outputs.noop == 'true'
        run: |
          python ./scripts/git_test/comment_pr.py
        env:
          ACCESS_TOKEN: ${{ steps.generate_token.outputs.token }}
          ENV: ${{ steps.branch-deploy.outputs.environment }}
          PR_NUMBER: ${{ github.event.issue.number }}
          NOOP_MODE: ${{ steps.branch-deploy.outputs.noop }}
          VIEW_ONLY: ${{ steps.branch-deploy.outputs.params == 'view' }}

      - name: Comment deploy
        if: |
          contains(fromJSON('["pigmeister"]'), github.actor) &&
          steps.branch-deploy.outputs.continue == 'true' &&
          steps.branch-deploy.outputs.noop == 'false'
        run: |
          python ./scripts/git_test/comment_pr.py
        env:
          ACCESS_TOKEN: ${{ steps.generate_token.outputs.token }}
          ENV: ${{ steps.branch-deploy.outputs.environment }}
          PR_NUMBER: ${{ github.event.issue.number }}
          NOOP_MODE: ${{ steps.branch-deploy.outputs.noop }}
          VIEW_ONLY: ${{ steps.branch-deploy.outputs.params == 'view' }}